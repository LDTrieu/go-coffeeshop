version: "3.7"

services:
  sqlc:
    image: kjconroy/sqlc
    volumes:
      - ./sqlc.yaml:/sqlc.yaml
      - ./internal:/internal
      - ./db:/db
    command: 
      - generate
    depends_on:
      - postgres
    networks:
      - coffeeshop-network
  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=P@ssw0rd
    healthcheck:
      test: ["CMD", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
    ports:
      - "5432:5432"
    networks:
      - coffeeshop-network

  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - coffeeshop-network
  
networks:
  coffeeshop-network:
  # proxy:
  #   build:
  #     context: .
  #     dockerfile: ./docker/Dockerfile-proxy
  #   image: go-coffeeshop-proxy
  #   environment:
  #     APP_NAME: 'proxy-service in docker'
  #     GRPC_PRODUCT_HOST: 'product'
  #     GRPC_PRODUCT_PORT: 5001
  #   ports:
  #     - 5000:5000
  #   depends_on:
  #     - product
  #     - counter
  #   networks:
  #     - coffeeshop-network

  # product:
  #   build:
  #     context: .
  #     dockerfile: ./docker/Dockerfile-product
  #   image: go-coffeeshop-product
  #   environment:
  #     APP_NAME: 'product-service in docker'
  #   ports:
  #     - 5001:5001
  #   networks:
  #     - coffeeshop-network

  # counter:
  #   build:
  #     context: .
  #     dockerfile: ./docker/Dockerfile-counter
  #   image: go-coffeeshop-counter
  #   environment:
  #     APP_NAME: 'counter-service in docker'
  #   ports:
  #     - 5002:5002
  #   depends_on:
  #     - postgres
  #     - rabbitmq
  #   networks:
  #     - coffeeshop-network

# networks:
#   coffeeshop-network: